plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5' // 매우 안정적인 Spring Boot 버전
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.goldSys'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// Spring AI 라이브러리를 위한 공식 저장소 설정
repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

// Spring AI 버전 관리를 위한 BOM (Bill of Materials) 설정
dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:1.0.0-M1"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Spring Boot 기본 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Session (JDBC 기반) - 쿠키 문제를 해결하기 위해 추가
    implementation 'org.springframework.session:spring-session-jdbc'

    // Spring AI (OpenAI) - BOM이 버전을 자동으로 관리
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

    // 기타 라이브러리
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}